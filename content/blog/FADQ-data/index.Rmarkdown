---
title: "FADQ historical crops data"
author: Johanie Fournier, agr. 
date: "2022-05-22"
slug: new-blog
categories:
  - rstats
  - tidyverse
tags:
  - rstats
  - tidyverse
subtitle: ''
summary: "I have a lot of things to try... so I need a lot of data to play with. Here I summarize you how I extract FADQ historic data. I'm going to place the tidy data in a repro on github and play with it for my next blogs."
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: false
projects: []
---

```{r setup, include=FALSE}
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE, 
                      echo = TRUE, dpi = 300, cache.lazy = FALSE,
                      tidy = "styler", fig.width = 8, fig.height = 5)
library(tidyverse)
library(ggplot2)
library(jofou.lib)
theme_set(theme_minimal() +
          theme(axis.line = element_line(linetype="solid", size=.3, color="black"),
                axis.ticks = element_line(linetype="solid", size=.5, color="black"),
                panel.grid.major.y = element_blank(),
                panel.grid.major.x = element_blank(),
                panel.grid.minor = element_blank(),
                axis.title.x = element_text(hjust = 0, face = "bold"),
                axis.title.y = element_text(hjust = 1, face = "bold"),
                title = element_text(hjust = 1, face = "bold", size=14)))
```

[FADQ](https://www.fadq.qc.ca/accueil/) here in Quebec, is generous enough to put on their website all the historical data of crop used for each Quebec's fiend back to 2003. You can find it [here](https://www.fadq.qc.ca/documents/donnees/base-de-donnees-des-parcelles-et-productions-agricoles-declarees/) 

I download all of it on my computer and you can find the process in [this github repro](https://github.com/Jofou/PINs/tree/master/FADQ/1%20Import).

Now, let's see what we got in this data set!

## Get the data

```{r, echo=FALSE}
path_to_file="/Users/johaniefournier/Library/Mobile Documents/com~apple~CloudDocs/ADV/PINs/FADQ/2 Prepared/"
```

```{r}
board_prepared <- pins::board_folder(path_to_file, versioned = TRUE)

data<-board_prepared %>%
  pins::pin_read("centroid")

head(data)
```

## Explore the data

In this dataset, **IDANPAR** is a unique ID for each combination field/year. **X** and **Y** are GPS coordinate. 

First, I want to look at the number of field we have for each year.

```{r}
ggplot(data) + 
  geom_histogram(aes(an), position = "identity", binwidth = 1,
                     fill = "#DBBDC3", color = "black")+
  labs(title = "Frequency Histogram for Year",
       x=" ")
```

The number of information available for each year is constant. This doesn't represent all the cultivated field of Quebec, because adhesion to FADQ is not mandatory, but this gives a pretty good idea. 

Let's have a look at the crop. 

```{r}
data %>% 
  count(culture_fadq) %>% 
  filter(n>=5000) %>% 
  ggplot(aes(reorder(culture_fadq, n), n)) + 
  geom_bar(stat="identity", fill = "#DBBDC3", color = "black")+
  coord_flip()+
  labs(title = "Frequency Histogram for Crops",
       x=" ")
```

Why is NA the main crop in this data? I looked in the original data and there are indeed a lot of missing crops. Since this information is not available, I think it's safe to delete those lines. 

Now let's see how the field area look like.

```{r}
ggplot(data) + 
  geom_histogram(aes(suphec), position = "identity", binwidth = 1,
                     fill = "#DBBDC3", color = "black")+
  labs(title = "Frequency Histogram for Field Area",
       x=" ")

ggplot(data) + 
  geom_boxplot(aes(suphec), fill = "#DBBDC3", color = "black")+
  labs(title = "Boxplot for Field Area",
       x=" ")

data %>%
  select(suphec) %>% 
  my_inspect_num()
```

There are field of more than 200 ha in Quebec! `r emo::ji("scared")` Let me know, I don't want to walk all this to get the soil samples `r emo::ji("laugh")` !

There is a lot of outliers in this. Dealing with outliers is always tricky. I don't even have found the perfect recipe yet. 

So before I can have fun with this data set, it need a bit of cleaning:

* Remove _NA_ crop
* Simplify crop list
* Remove outliers in field area

## Tidy data

### Simplify Crops

```{r}
data_clean_crops<-data %>% 
  filter(!is.na(culture_fadq)) %>% 
  mutate(groupe = case_when(
    grepl("foin|panic|feverole|semis direct",culture_fadq) ~ "hay",
    grepl("avoine|ble|orge|seigle|sarrasin|triticale|millet|canola|sorgho|tournesol|epeautre|lin|chanvre",culture_fadq) ~ "cereals",
    grepl("pommes de terre",culture_fadq) ~ "potato",
    grepl("framboisier|framboise|fraisier|fraise|pommier|bleuet|bleuetier|arbustes|coniferes|gadellier|camerise|vigne|poire|canneberges|fruitiers et arbres",culture_fadq) ~ "trees and fruits",
    grepl("paturage",culture_fadq) ~ "pasture",
    grepl("soya",culture_fadq) ~ "soy",
    grepl("mais",culture_fadq) ~ "corn",
    grepl("haricot|chou|brocoli|melon|laitue|oignon|piment|celeris|carotte|panais|radis|rutabaga|zucchini|tomate|betterave|cornichon|rabiole|endive|ail|artichaut|asperge|aubergine|poireau|fines herbes|topinambour|celeri-rave|aneth|epinard|pois|rhubarbe|citrouille|courge|concombre|chou-fleur|tabac|gourganes|echalottes|feverole|navets",culture_fadq) ~ "vegetables",
    grepl("non-cultive|tourbe|engrais vert", culture_fadq) ~ "not cultivated",
          TRUE ~ as.character(.$culture_fadq))) 

data_clean_crops %>% 
  count(groupe, sort=TRUE) %>% 
  DT::datatable()
```

The crop list look much better now! `r emo::ji("sparkles")`. Time to deal with the field area outliers.

I mainly use 3 ways of dealing with them:

* 1) The 5% out
* 2) [Hampel X84](https://dsf.berkeley.edu/jmh/papers/cleaning-unece.pdf) calculus, a robust outliers detection technique that label as outliers any point that is more than 1.4826 _x_ MADs (median absolute deviation) away from the median. 
* 3) Box-Cox transformation

I usual look at the 2 first and chose the one that make the mean and the median the closest (good indication of normal distribution). If I can stay away from transformation I will.

### 5% Out

```{r}
summary(data_clean_crops$suphec)
quantile(data_clean_crops$suphec, c(0.05, 0.95))

data_clean_crops %>% 
  filter(suphec <=13.9) %>% 
  ggplot() + 
  geom_histogram(aes(suphec), position = "identity", binwidth = 1,
                     fill = "#DBBDC3", color = "black")+
  labs(title = "Frequency Histogram for Field Area",
       x=" ")
```

95% of the field contain in this dataset have an area smaller than 13.9 ha. This exclude a lot of field. Is all the field with more than 14 ha all outliers? I don't think so...

### Hampel X85

```{r}
var<-data_clean_crops$suphec 

upper_limit<-median(var)+1.4826*2*mad(var)
upper_limit

data_clean_crops %>% 
  filter(suphec <= upper_limit) %>% 
  ggplot() + 
  geom_histogram(aes(suphec), position = "identity", binwidth = 1,
                     fill = "#DBBDC3", color = "black")+
  labs(title = "Frequency Histogram for Field Area",
       x=" ")
```
OK, I can see that in this case the Hampel X84 method make the distribution of the variable more normal. But I still can't consider all the field over 12 or 14 ha as outliers. And this doesn't help much to normalize the shape of the curve. 

### Box-Cox Transformation

I try to avoid transformation at any cost. It usually just make a mess in the interpretation of the model accuracy. In some case, I can't avoid it. I like to use the Box-Cox method to choose the right transformation to use. This technique is quite simple. The most common transformation are presented here:

$\lambda$ | Transformation
--------  | --------------
-2        | $\frac{1}{x^2}$
-1        | $\frac{1}{x}$
-0.5      | $\frac{1}{\sqrt(x)}$
0         | $\log(x)$
0.5       | $\sqrt(x)$
1         | $x$
2         | $x^2$


```{r}
b <- MASS::boxcox(lm(data_clean_crops$suphec  ~ 1))
lambda <- b$x[which.max(b$y)] 
lambda
```
The best transformation for the field area is the log transformation. 

```{r}
data_clean_crops %>% 
  mutate(suphec_log=log(suphec)) %>% 
  ggplot() + 
  geom_histogram(aes(suphec_log), position = "identity", binwidth = 1,
                     fill = "#DBBDC3", color = "black")+
  labs(title = "Frequency Histogram for Field Area",
       x=" ")
```

Oh! We got something! The log transformation is the best way to make the field area variable look normal and I can keep all the big field. 

### Final data set

```{r}
data_clean<-data %>% 
  filter(!is.na(culture_fadq)) %>% 
  mutate(culture = case_when(
    grepl("foin|panic|feverole|semis direct",culture_fadq) ~ "hay",
    grepl("avoine|ble|orge|seigle|sarrasin|triticale|millet|canola|sorgho|tournesol|epeautre|lin|chanvre",culture_fadq) ~ "cereals",
    grepl("pommes de terre",culture_fadq) ~ "potato",
    grepl("framboisier|framboise|fraisier|fraise|pommier|bleuet|bleuetier|arbustes|coniferes|gadellier|camerise|vigne|poire|canneberges|fruitiers et arbres",culture_fadq) ~ "trees and fruits",
    grepl("paturage",culture_fadq) ~ "pasture",
    grepl("soya",culture_fadq) ~ "soy",
    grepl("mais",culture_fadq) ~ "corn",
    grepl("haricot|chou|brocoli|melon|laitue|oignon|piment|celeris|carotte|panais|radis|rutabaga|zucchini|tomate|betterave|cornichon|rabiole|endive|ail|artichaut|asperge|aubergine|poireau|fines herbes|topinambour|celeri-rave|aneth|epinard|pois|rhubarbe|citrouille|courge|concombre|chou-fleur|tabac|gourganes|echalottes|feverole|navets",culture_fadq) ~ "vegetables",
    grepl("non-cultive|tourbe|engrais vert", culture_fadq) ~ "not cultivated",
          TRUE ~ as.character(.$culture_fadq))) %>% 
  mutate(suphec_log=log(suphec)) %>% 
  select(-culture_fadq)

summary(data_clean)
```


`r emo::ji("tada")` I have a tidy dataset. You can fin it [here](https://github.com/Jofou/PINs/tree/master/FADQ/3%20Tidy/fadq_tidy/20220520T165247Z-b35d9)
