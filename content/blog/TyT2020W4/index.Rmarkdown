---
title: "TyT2020W04 - Visualize Index"
author: Johanie Fournier, agr. 
date: "2020-01-22"
slug: TyT2020W4
categories:
  - rstats
  - tidyverse
  - tidytuesday
tags:
  - rstats
  - tidyverse
  - tidytuesday
subtitle: ''
summary: "Initially publish it on my wordpress blog. I put it here for reference purpose."
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: false
projects: []
---

```{r setup, include=FALSE}
library(readxl)
library(readr)
library(dplyr)
library(tidyr)
library(data.table)
library(tidyverse)
library(ggplot2)
library(magick)
library(lubridate)
library(inspectdf)
library(ggtext)
library(rmarkdown)
library(patchwork)
library(ggpmisc)
library(tidytuesdayR)
```


## Get the data

```{r}
spotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')
```

## Explore the data

```{r}
summary(spotify_songs)
glimpse(spotify_songs)
```

## Prepare the data

```{r}
# convertir le tempo en un indicateur qui varie entre 0 et 1
tempo<-data.frame(tempo=c(0,99.96,120.88,133.92,239.44),tempo_0_1=c(0,0.25,0.50,0.75,1))
formula <- y ~ x
gg<- ggplot(data=tempo, aes(x=tempo, y=tempo_0_1))
gg<- gg + geom_point()
gg<- gg + geom_smooth(method='lm', se=FALSE, formula=formula)
gg<- gg +  stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
                   formula = formula, parse = TRUE)
gg<- gg + theme_classic()
gg<- gg + scale_y_continuous(limits=c(0,1))
gg

data<-spotify_songs %>% 
  select(playlist_genre, danceability, energy,valence,tempo) %>% 
  mutate(tempo_0_1=0.00438*tempo-0.0208) %>% 
  select(-tempo) %>% 
  gather(type, valeur,-playlist_genre) %>% 
  group_by(playlist_genre, type) %>% 
  summarise_if(is.numeric, median, na.rm = TRUE) %>%
  ungroup() 
```

## Visualize the data

```{r, eval=FALSE}
#Graphique
gg<- ggplot(data=data,aes(x = valeur, y=playlist_genre))
gg <- gg + geom_segment( aes(x=0.3, xend=0.9,y=playlist_genre, yend=playlist_genre),
                           color="#838A90", alpha=0.6, size=4)
gg <- gg + geom_segment( aes(x=0.3, xend=0.9,y=playlist_genre, yend=playlist_genre),
                           color="#ffffff", alpha=1, size=0.5)
gg <- gg +  geom_point(aes(fill=type, group=playlist_genre), color="#FFFFFF", size=20, pch=21, alpha=0.5)
gg <- gg +  geom_point(aes(fill=type, group=playlist_genre), color="#FFFFFF", size=12, pch=21)
gg <- gg + scale_fill_brewer(palette = "Set1",labels=c("danceability","Energy", "Tempo", "Valance"))
#ajouter les étiquettes de points
gg<-gg + geom_text(data=data, aes(x=valeur, y=playlist_genre, label=(round(data$valeur,1)), group=NULL), color="#ffffff", size=4.5, vjust=0.5, hjust=0.5, fontface="bold")
#pour l'axe des y à l'intérieur du graphique
gg<-gg + annotate(geom="text",x=0.3, y=1.3, label="Edm", color="#ffffff", size=5.5, vjust=0.5, hjust=0, fontface="bold")
gg<-gg + annotate(geom="text",x=0.3, y=2.3, label="Latin", color="#ffffff", size=5.5, vjust=0.5, hjust=0, fontface="bold")
gg<-gg + annotate(geom="text",x=0.3, y=3.3, label="Pop", color="#ffffff", size=5.5, vjust=0.5, hjust=0, fontface="bold")
gg<-gg + annotate(geom="text",x=0.3, y=4.3, label="R&B", color="#ffffff", size=5.5, vjust=0.5, hjust=0, fontface="bold")
gg<-gg + annotate(geom="text",x=0.3, y=5.3, label="Rap", color="#ffffff", size=5.5, vjust=0.5, hjust=0, fontface="bold")
gg<-gg + annotate(geom="text",x=0.3, y=6.3, label="Rock", color="#ffffff", size=5.5, vjust=0.5, hjust=0, fontface="bold")
#ajuster l'axe des x
gg <- gg + scale_x_continuous(expand = c(0,0))
#modifier le thème
gg <- gg +  theme(plot.background = element_rect(fill = "#171717"),
                  panel.background = element_rect(fill = "#171717"),
                  panel.grid.major.y= element_blank(),
                  panel.grid.major.x= element_blank(),
                  panel.grid.minor = element_blank(),
                  axis.line.x = element_blank(),
                  axis.line.y =element_blank(),
                  axis.ticks.x = element_blank(), 
                  axis.ticks.y = element_blank())
gg <- gg +  theme(legend.position="top", 
                  legend.title = element_blank(), 
                  legend.background = element_blank(),  
                  legend.key=element_blank(),
                  legend.spacing.x = unit(0.2, 'cm'), 
                  legend.text= element_text(hjust =0.5,size= 8, colour = "#FFFFFF"))
gg <- gg +    guides(fill = guide_legend(nrow = 1, reverse = TRUE))

#ajouter les titres
gg<-gg + labs(title="What kind of music do you prefer?",
            subtitle = "\nSpotify classifies music genres according to their characteristics to help users make their choice.\n",
              x="Index", 
              y=" ", 
              caption="\nSOURCE: Spotifyr   |  DESIGN: Johanie Fournier, agr.")
gg<-gg + theme(  plot.title    =  element_text(size=30, hjust=0,vjust=0.5, color="#FFFFFF", family="Tw Cen MT", face="bold"),
                 plot.subtitle = element_text(size=15, hjust=0,vjust=0.5, color="#FFFFFF", family="Tw Cen MT"),
                 plot.caption  = element_text(size=10, hjust=1,vjust=0.5, color="#FFFFFF", family="Tw Cen MT"),
                 axis.title.x  = element_text(size=15, hjust=0.05,vjust=0.5, color="#FFFFFF", family="Tw Cen MT", angle =0),
                 axis.title.y  = element_blank(),
                 axis.text.y   = element_blank(), 
                 axis.text.x   = element_blank())
```

```{r echo=FALSE, out.width='100%', fig.align='center'}
magick::image_read('featured.png')
```

