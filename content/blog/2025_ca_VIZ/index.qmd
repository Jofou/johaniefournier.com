---
title: 'Side by side interactive map with {leaflet} and {leaflet.extras2}'
author: Johanie Fournier, agr., M.Sc.
date: "2025-02-21"
slug: ca_temperature_VIZ
categories:
  - rstats
  - tidymodels
  - tidytuesday
  - models
  - viz
tags:
  - models
  - rstats
  - tidymodels
  - tidytuesday
  - viz
summary: "This tutorial shows how to create an interactive side-by-side map visualization of the mean temperature for 2024 and 2100 for the Chaudière-Appalaches region in Quebec using leaflet and leaflet.extras2 R packages."
editor_options: 
  chunk_output_type: inline
adsense:
  publisher-id: ca-pub-7674504334497845
filters:
- adsense
resources:
 - ads.txt 
---

```{r setup}
#| include: false
library(knitr)
knitr::opts_chunk$set(cache = TRUE, cache.lazy = FALSE, warning = FALSE, 
                      message = FALSE, echo = TRUE, dpi = 180,
                      fig.width = 7, fig.height = 5)

# Importer des données
library(openxlsx)

# explorer et présenter les données
library(inspectdf)
library(kableExtra)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(gganimate)
library(skimr)

# Parallel Processing
library(doFuture)

# Core 
library(recipes)
library(tidymodels)
library(timetk)
library(fs)


#Import data
library(pins)

#H2O
#library(h2o)

#Geospatial
library(sf)
library(terra)
#remotes::install_github("wmgeolab/rgeoboundaries")
library(rgeoboundaries)

# Climat
#install.packages("ecmwfr")
library(ecmwfr)
#brew install netcdf
library(ncdf4)
#devtools::install_github("https://github.com/ErikKusch/KrigR", force=TRUE)
library(KrigR)

#Monitorer le temps que ça prend
library(tictoc)

#Tidytuesday
library(tidytuesdayR)

#Mes fonctions
#devtools::install_github("jofou/jofou.lib")
library(jofou.lib)

#Python
library(reticulate)
#renv::use_python()
Sys.setenv(RETICULATE_PYTHON ="~/.virtualenvs/r-reticulate/bin/python")

#Theme_map
theme_map <- function(base_size=9, base_family="") { # 3
	require(grid)
	theme_bw(base_size=base_size, base_family=base_family) %+replace%
		theme(axis.line=element_blank(),
			  axis.text=element_blank(),
			  axis.ticks=element_blank(),
			  axis.title=element_blank(),
			  panel.background=element_blank(),
			  panel.border=element_blank(),
			  panel.grid=element_blank(),
			  panel.spacing=unit(0, "lines"),
			  plot.background=element_blank(),
			  legend.justification = c(0,0),
			  legend.position = c(0,0),
			  plot.title= element_text(size=20, hjust=0, color="black", face="bold"),
		)
}

#Graph theme
theme_set(theme_minimal() +
          theme(axis.line = element_line(linetype="solid", linewidth=.3, color="black"),
                axis.ticks = element_line(linetype="solid", linewidth=.5, color="black"),
                panel.grid.major.y = element_blank(),
                panel.grid.major.x = element_blank(),
                panel.grid.minor = element_blank(),
                axis.title.x = element_text(hjust = 0, face = "bold"),
                axis.title.y = element_text(hjust = 1, face = "bold"),
                title = element_text(hjust = 1, face = "bold", size=14)))

update_geom_defaults("rect", list(fill = "#DBBDC3", alpha = 0.8))
update_geom_defaults("line", list(fill = "#DBBDC3", alpha = 0.8))
update_geom_defaults("point", list(fill = "#DBBDC3", alpha = 0.8))

#CRS
#Geographic
#WGS84:"EPSG:4326"
#Projected
#NAD83:"EPSG3978"

Dir.Base <- getwd() # identifying the current directory
Dir.Data <- file.path(Dir.Base, "Data") # folder path for data
Dir.Covariates <- file.path(Dir.Base, "Covariates") # folder path for covariates
Dir.Exports <- file.path(Dir.Base, "Exports") # folder path for exports
```


<a href = "https://subscribepage.io/E3ia1B"> ![](petit.png)
</a>

<br>

Understanding climate change requires robust models that simulate past, present, and future climate conditions. The **Coupled Model Intercomparison Project (CMIP)** plays a crucial role in this effort by providing a standardized framework for climate modeling worldwide.  

CMIP is an international collaboration that brings together climate modeling centers to compare and analyze **Earth System Models (ESMs)**. It is coordinated by the **World Climate Research Programme (WCRP)** and supports climate assessments such as the **Intergovernmental Panel on Climate Change (IPCC) reports**.  

The project is organized into different phases (**CMIP3, CMIP5, CMIP6**), each improving model simulations and expanding research capabilities. These models help scientists explore climate variability, assess future climate projections, and study interactions between the atmosphere, oceans, and land.  

One of the key advancements in **CMIP6** is the use of **Shared Socioeconomic Pathways (SSPs)**, which describe different possible futures based on socioeconomic developments and greenhouse gas (GHG) emissions. The SSPs are used in combination with **Representative Concentration Pathways (RCPs)** to explore climate impacts under various global conditions.  

CMIP6 defines **five SSPs**, each representing a different trajectory of socioeconomic development and climate action:  

1. **SSP1-1.9 & SSP1-2.6 ("Sustainability - Taking the Green Road")**  
   - A world that prioritizes sustainable development, global cooperation, and low emissions.  
   - **Outcome:** Rapid decarbonization, limiting warming to **1.5°C–2°C** by 2100.  
   - **Example:** Strong investments in green technologies, renewable energy, and social equity.  

2. **SSP2-4.5 ("Middle of the Road")**  
   - A business-as-usual scenario with moderate emissions and socio-economic development.  
   - **Outcome:** Warming of **2.5°C–3°C** by 2100.  
   - **Example:** Some global efforts to reduce emissions, but no major breakthroughs.  

3. **SSP3-7.0 ("Regional Rivalry - A Rocky Road")**  
   - A fragmented world with regional conflicts, slow economic growth, and weak climate policies.  
   - **Outcome:** High emissions, **3°C–4°C** warming by 2100.  
   - **Example:** Focus on national security, protectionist policies, and reliance on fossil fuels.  

4. **SSP4-6.0 ("Inequality - A Divided World")**  
   - A highly unequal world where technological progress benefits only some nations, leading to uneven climate mitigation.  
   - **Outcome:** **2.5°C–3.5°C** warming by 2100.  
   - **Example:** Advanced economies transition to clean energy, while others remain fossil-fuel dependent.  

5. **SSP5-8.5 ("Fossil-Fueled Development - Taking the Highway")**  
   - A world driven by high economic growth and fossil fuel expansion, with little concern for climate policy.  
   - **Outcome:** Extreme warming of **4°C–5°C** by 2100.  
   - **Example:** Strong technological advances, but continued reliance on coal, oil, and gas.  


 **Why is CMIP Important?**  
- **Climate Projections**: CMIP models simulate future climate scenarios under different greenhouse gas emission pathways.  
- **Scientific Collaboration**: It enables researchers to compare models, understand uncertainties, and improve forecasting methods.  
- **Policy Support**: CMIP outputs are widely used in climate risk assessments and policy decision-making at national and global levels.  

 
The CMIP6 statistically downscaled climate dataset provides high-resolution climate projections for Canada based on the Coupled Model Intercomparison Project Phase 6 (CMIP6) models. The dataset includes temperature and precipitation data for the period 1950-2100 under different Shared Socioeconomic Pathways (SSPs) and can be found  [here](https://climate-scenarios.canada.ca/?page=CanDCS6-data).

## Goal

The goal of this tutorial is to download, process, and visualize CMIP6 climate model data using R. We will:

* Download CMIP6 downscaled data.
* Process NetCDF files and convert them into spatial raster formats.
* Create an interactive side-by-side map visualization.

By the end of this tutorial, you will be able to explore and visualize climate change data interactively in R. Let's get started!

## Get the data

### Region borders

```{r}
#| echo: false
blogdown::shortcode("youtube", "K5khtyIdnbk")
```
We need the polygon of the region of interest. We will use the `rgeoboundaries` package to extract the polygon of Quebec.

```{r}
qc_sf <- rgeoboundaries::gb_adm2(country = "CAN") |>
    filter(shapeName %in% c("Bas-Saint-Laurent", 
                          "Gaspésie--Îles-de-la-Madelei", 
                          "Capitale-Nationale",
                          "Chaudière-Appalaches",
                          "Estrie",
                          "Centre-du-Québec",
                          "Montérégie",
                          "Montréal",
                          "Laval",
                          "Outaouais",
                          "Abitibi-Témiscamingue",
                          "Lanaudière",
                          "Laurentides",
                          "Mauricie")) |> 
  select(shapeName, geometry) |> 
  st_set_crs("WGS84") 
qc_sf #geographic coordinate
```

```{r}
plot(qc_sf$geometry)
```

### Temperature data

We will download the temperature data for Quebe from the CanDCS-M6 dataset. From the website, I selected the canDSC-M6 dataset for the ensemble mean temperature with the historical+SSP2-4.5 scenario.

Now let's download the cnc files and convert them into raster format.

```{r}
#| eval: FALSE
# Download the data
nc_files <- list.files("CanDCS-M6/", pattern = "\\.nc$", full.names = TRUE)
  
r <- rast(nc_files)

# Print metadata
print(r)

#Crop
r_ca<-r |> 
  terra::crop(
        qc_sf,
        snap = "in",
        mask = TRUE
    )
```

```{r}
#| eval: FALSE
#| echo: FALSE
writeRaster(r_ca, "Data/temperature_raw.tif", overwrite=TRUE)
```


```{r}
#| echo: FALSE
mean_temp_2024<-rast("Data/temperature_raw.tif")[[1]]
mean_temp_2100<-rast("Data/temperature_raw.tif")[[85]]
```

### Krigging

```{r}
#| echo: false
blogdown::shortcode("youtube", "jEaoYtSi4t8")
```

In order to create an interesting visual, we need to disagregate the data. We will use the `KrigR` package to disaggregate the data.

#### 2024

Let's start with 2024.

```{r}
#| eval: FALSE
library(KrigR)

Covsls <- CovariateSetup(
  Training = mean_temp_2024,
  Target = .009,
  Dir = Dir.Covariates,
  Keep_Global = TRUE
)

QuickStart_Krig <- Kriging(
  Data = mean_temp_2024, # data we want to krig as a raster object
  Covariates_training = Covsls[[1]], # training covariate as a raster object
  Covariates_target = Covsls[[2]], # target covariate as a raster object
  Equation = "GMTED2010", # the covariate(s) we want to use
  nmax = 40, # degree of localisation
  Cores = 3, # we want to krig using three cores to speed this process up
  FileName = "QuickStart_Krig", # the file name for our full kriging output
  Dir = Dir.Exports # which directory to save our final input in
)
```


```{r}
#| eval: FALSE
temp2024<- terra::rast("Exports/QuickStart_Krig_Kriged.nc")

temp2024_crop <- temp2024 |>
    terra::crop(
        qc_sf,
        snap = "in",
        mask = TRUE
    )

writeRaster(temp2024_crop, "Data/temp2024_crop.tif", overwrite=TRUE)
```



#### 2100

Now we will disaggregate the data for 2100.

```{r}
#| eval: FALSE
library(KrigR)

Covsls <- CovariateSetup(
  Training = mean_temp_2100,
  Target = .009,
  Dir = Dir.Covariates,
  Keep_Global = TRUE
)

QuickStart_Krig <- Kriging(
  Data = mean_temp_2100, # data we want to krig as a raster object
  Covariates_training = Covsls[[1]], # training covariate as a raster object
  Covariates_target = Covsls[[2]], # target covariate as a raster object
  Equation = "GMTED2010", # the covariate(s) we want to use
  nmax = 40, # degree of localisation
  Cores = 3, # we want to krig using three cores to speed this process up
  FileName = "QuickStart_Krig", # the file name for our full kriging output
  Dir = Dir.Exports # which directory to save our final input in
)
#| eval: FALSE
```


```{r}
#| eval: FALSE
temp2100<- terra::rast("Exports/QuickStart_Krig_Kriged.nc")

temp2100_crop <- temp2100 |>
    terra::crop(
        qc_sf,
        snap = "in",
        mask = TRUE
    )

writeRaster(temp2100_crop, "Data/temp2100_crop.tif", overwrite=TRUE)
```


# Visualization

Now that we have the data, we can create an interactive side-by-side map visualization of the mean temperature for 2024 and 2100 for this region. We will use the `leaflet` and `leaflet.extras2` packages to create the map.


```{r}
library(leaflet)
library(leaflet.extras2)

r1 <- rast("Data/temp2024_crop.tif")
r2 <- rast("Data/temp2100_crop.tif")
  
pal <- colorNumeric("plasma", domain=c(0, 12), na.color = "transparent")

leaflet(width = "100%") |>
      addMapPane("right", zIndex = 1) |>
      addMapPane("left",  zIndex = 1) |>

      addTiles(urlTemplate = "https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",
               group = "base", layerId = "baseid1", options = pathOptions(pane = "left"), "Mean Temperature (°C)") |>

      addTiles(urlTemplate = "https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",
               group = "base", layerId = "baseid2", options = pathOptions(pane = "right"), "Mean Temperature (°C)") |>

      addRasterImage(x = r1, colors = pal, options = leafletOptions(pane = "left"), group = "2024") |>
      addRasterImage(x = r2, colors = pal, options = leafletOptions(pane = "right"), group = "2100") |>

      addSidebyside(layerId = "sidecontrols",
                    rightId = "baseid2",
                    leftId  = "baseid1")|>
      addLegend(pal = pal, 
                values = c(0, 12),
                title = "2024", 
                position = "bottomleft") |>
       addLegend(pal = pal, 
                 title = "2100", 
                 values=c(0, 12),
                 position = "bottomright") 
```

## Conclusion

In this tutorial, we explored how to download, process, and visualize CMIP6 climate model data using R. We downloaded temperature data for Quebec from the CanDCS-M6 dataset, processed the NetCDF files, and converted them into spatial raster formats. We then used the `KrigR` package to disaggregate the data and create an interactive side-by-side map visualization of the mean temperature for 2024 and 2100 for Quebec. This visualization provides an engaging way to explore climate change data and understand the potential impacts of different climate scenarios.

# Sign up for the newsletter

<a href = "https://dashboard.mailerlite.com/forms/1478852/152663752035010469/share"> ![](sign_up.png)
</a>

<br>

# Session Info

```{r}
sessionInfo()
```

