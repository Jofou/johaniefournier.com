---
title: "TyT2019W29 - R4DS"
author: Johanie Fournier, agr. 
date: "2019-07-24"
slug: TyT2019W29
categories:
  - rstats
  - tidyverse
  - tidytuesday
tags:
  - rstats
  - tidyverse
  - tidytuesday
subtitle: ''
summary: "Initially publish it on my wordpress blog. I put it here for reference purpose."
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: false
projects: []
---

```{r setup, include=FALSE}
library(readxl)
library(readr)
library(dplyr)
library(tidyr)
library(data.table)
library(tidyverse)
library(ggplot2)
library(magick)
library(lubridate)
library(inspectdf)
library(ggtext)
library(rmarkdown)
library(patchwork)
library(ggpmisc)
library(tidytuesdayR)
```


## Get the data

```{r}
r4ds_members <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-16/r4ds_members.csv")
```

## Explore the data

```{r}
summary(r4ds_members)
```

## Prepare the data

```{r, eval=FALSE}
r4ds<-r4ds_members %>% 
  select('date','total_membership','messages_posted') %>%
  mutate(quarter=quarter(date, with_year = TRUE)) %>% 
  group_by(quarter) %>% 
  summarise(tot_m_1000=sum(total_membership/1000)) %>% 
  filter(!quarter %in% 2019.3)

r4ds_point<-r4ds %>% 
  filter(quarter %in% c(2017.3, 2019.2))

 r4ds_active<-r4ds_members %>% 
  select('date','total_membership','daily_active_members') %>%
  mutate(quarter=quarter(date, with_year = TRUE)) %>% 
  group_by(quarter) %>% 
  summarise(active_1000=sum(daily_active_members/1000)) %>% 
  filter(!quarter %in% 2019.3) 

r4ds_point_active<-r4ds_active %>% 
  filter(quarter %in% c(2017.3, 2019.2))

r4ds<-r4ds_members %>% 
  mutate(daily_message=messages_posted-shift(messages_posted)) %>% 
  filter(daily_message>0 & daily_message<5000) %>% 
  mutate(activity=(daily_message/daily_active_members)) %>% 
    mutate(quarter=quarter(date, with_year = TRUE)) %>% 
  group_by(quarter) %>% 
  summarise(active=sum(activity)) %>% 
  filter(!quarter %in% 2019.3) 

r4ds_point_activity<-r4ds %>% 
  filter(quarter %in% c(2017.3, 2019.2))
```

## Visualize the data

```{r, eval=FALSE}
#Graphique 
gg1<-ggplot(data=r4ds, aes(x = quarter, y=tot_m_1000))
gg1<-gg1 + geom_step(linetype=5, color="#A9A9A9", size=2.5)
gg1<-gg1 + geom_step(data=r4ds_active, aes(x = quarter, y=active_1000),linetype=5, color="#A9A9A9", size=2.5)
gg1<-gg1 +  geom_rect(data=r4ds,
            mapping=aes(xmin=2018.1,xmax=2018.4,ymin=0,ymax=Inf),
            fill='#01A7C2',alpha=0.05)
gg1<-gg1 + geom_point(data=r4ds_point,
                    mapping=(aes(x=quarter,y=tot_m_1000)), 
                    color="#A9A9A9", size=5)
gg1<-gg1 + geom_point(data=r4ds_point_active,
                    mapping=(aes(x=quarter,y=active_1000)), 
                    color="#A9A9A9", size=5)
#ajuster les axes 
gg1<-gg1 + scale_x_yearqtr(breaks = seq(from = min(r4ds$quarter), to = max(r4ds$quarter), by = 0.25),
                  format = "%Y-%q")
gg1<-gg1 + scale_y_continuous(breaks=seq(0,300,50), limits = c(0, 300))
#modifier la légende
gg1<-gg1 + theme(legend.position="none")
#modifier le thème
gg1<-gg1 +theme(panel.border = element_blank(),
              panel.background = element_blank(),
              plot.background = element_blank(),
              panel.grid.major.y= element_blank(),
              panel.grid.major.x= element_blank(),
              panel.grid.minor = element_blank(),
              axis.line.x = element_line(color="#A9A9A9"),
              axis.line.y = element_line(color="#A9A9A9"),
              axis.ticks= element_blank())
#ajouter les titres
gg1<-gg1 + labs(title="",
              subtitle=" ",
              y="Members (x1000)", 
              x=" ")
gg1<-gg1 + theme(plot.title    = element_text(hjust=0,size=15, color="#A9A9A9", face="bold"),
               plot.subtitle = element_text(hjust=0,size=12, color="#A9A9A9"),
               axis.title.y  = element_text(hjust=1,size=12, color="#A9A9A9", angle=90),
               axis.title.x  = element_blank(),
               axis.text.y   = element_text(hjust=0.5, size=10, color="#A9A9A9"), 
               axis.text.x   = element_text(hjust=0.5, size=10, color="#A9A9A9"))
#ajouter les étiquettes
gg1<-gg1 + annotate(geom="text", x=2019.2,y=270, label="Total", color="#A9A9A9", size=5, hjust=1,vjust=0, fontface="bold")
gg1<-gg1 + annotate(geom="text", x=2019.2,y=18, label="Active", color="#A9A9A9", size=5, hjust=1
                    ,vjust=0, fontface="bold")


gg2<-ggplot(data=r4ds, aes(x = quarter, y=active))
gg2<-gg2 + geom_step(linetype=5, color="#A9A9A9", size=2.5)
gg2<-gg2 +  geom_rect(data=r4ds,
            mapping=aes(xmin=2018.1,xmax=2018.4,ymin=0,ymax=Inf),
            fill='#01A7C2',alpha=0.05)
gg2<-gg2 + geom_point(data=r4ds_point_activity,
                    mapping=(aes(x=quarter,y=active)), 
                    color="#A9A9A9", size=5)
#ajuster les axes 
gg2<-gg2 + scale_x_yearqtr(breaks = seq(from = min(r4ds$quarter), to = max(r4ds$quarter), by = 0.25),
                  format = "%Y-%q")
gg2<-gg2 + scale_y_continuous(breaks=seq(0,100,25), limits = c(0, 100))
#modifier la légende
gg2<-gg2 + theme(legend.position="none")
#modifier le thème
gg2<-gg2 +theme(panel.border = element_blank(),
              panel.background = element_blank(),
              plot.background = element_blank(),
              panel.grid.major.y= element_blank(),
              panel.grid.major.x= element_blank(),
              panel.grid.minor = element_blank(),
              axis.line.x = element_line(color="#A9A9A9"),
              axis.line.y = element_line(color="#A9A9A9"),
              axis.ticks= element_blank())
#ajouter les titres
gg2<-gg2 + labs(title="",
              subtitle=" ",
              y="Daily messages/acive member", 
              x=" ")
gg2<-gg2 + theme(plot.title    = element_text(hjust=0,size=15, color="#A9A9A9", face="bold"),
               plot.subtitle = element_text(hjust=0,size=12, color="#A9A9A9"),
               axis.title.y  = element_text(hjust=1,size=12, color="#A9A9A9", angle=90),
               axis.title.x  = element_blank(),
               axis.text.y   = element_text(hjust=0.5, size=10, color="#A9A9A9"), 
               axis.text.x   = element_text(hjust=0.5, size=10, color="#A9A9A9"))


```

```{r echo=FALSE, out.width='100%', fig.align='center'}
magick::image_read('featured.png')
```

